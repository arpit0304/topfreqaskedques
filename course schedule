https://leetcode.com/problems/course-schedule/

class Solution {
public:
    bool dfs(vector<int>adj[], int curr, vector<bool>&vis, vector<bool>&dfsvis){
        vis[curr]=1;
        dfsvis[curr]=1;
        for(int i:adj[curr]){
            if(!vis[i]){
                if(dfs(adj,i,vis,dfsvis)) return true;
            }
            else if(dfsvis[i]) return true;
        }
        dfsvis[curr]=0;
        return false;
    }
    bool canFinish(int nc, vector<vector<int>>& prerequisites) {
        vector<int>adj[nc];
        for(int i=0;i<prerequisites.size();i++) adj[prerequisites[i][0]].push_back(prerequisites[i][1]);
        vector<bool>vis(nc,0),dfsvis(nc,0);
        for(int i=0;i<nc;i++){
            if(!vis[i]){
                if(dfs(adj,i, vis,dfsvis)) return false;
            }
        }
        return true;
    }
};
